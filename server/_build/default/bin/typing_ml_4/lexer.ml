# 1 "bin/typing_ml_4/lexer.mll"
 
let reservedWords = [
  (* Keywords *)
  ("if", Parser.IF);
  ("then", Parser.THEN);
  ("else", Parser.ELSE);
  ("true", Parser.TRUE);
  ("false", Parser.FALSE);
  ("let", Parser.LET);
  ("in", Parser.IN);
  ("fun", Parser.FUN);
  ("rec", Parser.REC);
  ("match", Parser.MATCH);
  ("with", Parser.WITH);
  ("int", Parser.INT);
  ("bool", Parser.BOOL);
  ("list", Parser.LIST);
]

# 22 "bin/typing_ml_4/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\238\255\000\000\001\000\243\255\244\255\245\255\247\255\
    \248\255\001\000\251\255\252\255\028\000\103\000\113\000\004\000\
    \246\255\250\255\242\255\240\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\014\000\255\255\255\255\255\255\255\255\
    \255\255\016\000\255\255\255\255\002\000\001\000\006\000\000\000\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\255\255\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\015\000\015\000\000\000\015\000\015\000\015\000\000\000\
    \015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \015\000\000\000\000\000\000\000\015\000\000\000\000\000\000\000\
    \005\000\004\000\010\000\011\000\006\000\014\000\017\000\000\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\003\000\018\000\008\000\007\000\000\000\000\000\
    \000\000\000\000\000\000\012\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\000\000\000\000\
    \000\000\000\000\000\000\002\000\000\000\019\000\000\000\000\000\
    \000\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\009\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\000\000\000\000\000\000\000\000\016\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\000\000\015\000\015\000\255\255\
    \015\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\015\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\009\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\012\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\002\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\012\000\000\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\255\255\255\255\255\255\255\255\014\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec main lexbuf =
   __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 22 "bin/typing_ml_4/lexer.mll"
                            ( main lexbuf )
# 153 "bin/typing_ml_4/lexer.ml"

  | 1 ->
# 24 "bin/typing_ml_4/lexer.mll"
    ( Parser.INTV (int_of_string (Lexing.lexeme lexbuf)) )
# 158 "bin/typing_ml_4/lexer.ml"

  | 2 ->
# 26 "bin/typing_ml_4/lexer.mll"
    ( let id = Lexing.lexeme lexbuf in
      try
        List.assoc id reservedWords
      with
      _ -> Parser.ID id
     )
# 168 "bin/typing_ml_4/lexer.ml"

  | 3 ->
# 32 "bin/typing_ml_4/lexer.mll"
      ( Parser.PLUS )
# 173 "bin/typing_ml_4/lexer.ml"

  | 4 ->
# 33 "bin/typing_ml_4/lexer.mll"
      ( Parser.MULT )
# 178 "bin/typing_ml_4/lexer.ml"

  | 5 ->
# 34 "bin/typing_ml_4/lexer.mll"
       ( Parser.TURNSTILE )
# 183 "bin/typing_ml_4/lexer.ml"

  | 6 ->
# 35 "bin/typing_ml_4/lexer.mll"
      ( Parser.MINUS )
# 188 "bin/typing_ml_4/lexer.ml"

  | 7 ->
# 36 "bin/typing_ml_4/lexer.mll"
      ( Parser.LT )
# 193 "bin/typing_ml_4/lexer.ml"

  | 8 ->
# 37 "bin/typing_ml_4/lexer.mll"
      ( Parser.EQ )
# 198 "bin/typing_ml_4/lexer.ml"

  | 9 ->
# 38 "bin/typing_ml_4/lexer.mll"
       ( Parser.ARROW )
# 203 "bin/typing_ml_4/lexer.ml"

  | 10 ->
# 39 "bin/typing_ml_4/lexer.mll"
      ( Parser.COMMA )
# 208 "bin/typing_ml_4/lexer.ml"

  | 11 ->
# 40 "bin/typing_ml_4/lexer.mll"
      ( Parser.LPAREN )
# 213 "bin/typing_ml_4/lexer.ml"

  | 12 ->
# 41 "bin/typing_ml_4/lexer.mll"
      ( Parser.RPAREN )
# 218 "bin/typing_ml_4/lexer.ml"

  | 13 ->
# 42 "bin/typing_ml_4/lexer.mll"
       ( Parser.CONSTRUCT )
# 223 "bin/typing_ml_4/lexer.ml"

  | 14 ->
# 43 "bin/typing_ml_4/lexer.mll"
      ( Parser.COLON )
# 228 "bin/typing_ml_4/lexer.ml"

  | 15 ->
# 44 "bin/typing_ml_4/lexer.mll"
       ( Parser.LBRACKET_RBRACKET )
# 233 "bin/typing_ml_4/lexer.ml"

  | 16 ->
# 45 "bin/typing_ml_4/lexer.mll"
      ( Parser.BAR )
# 238 "bin/typing_ml_4/lexer.ml"

  | 17 ->
# 46 "bin/typing_ml_4/lexer.mll"
      ( exit 0 )
# 243 "bin/typing_ml_4/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

;;

