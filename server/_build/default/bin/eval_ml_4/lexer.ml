# 1 "bin/eval_ml_4/lexer.mll"
 
let reservedWords = [
  (* Keywords *)
  ("evalto", Parser.EVALTO);
  ("if", Parser.IF);
  ("then", Parser.THEN);
  ("else", Parser.ELSE);
  ("true", Parser.TRUE);
  ("false", Parser.FALSE);
  ("let", Parser.LET);
  ("in", Parser.IN);
  ("fun", Parser.FUN);
  ("rec", Parser.REC);
  ("match", Parser.MATCH);
  ("with", Parser.WITH);
]

# 20 "bin/eval_ml_4/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\237\255\001\000\241\255\001\000\243\255\244\255\245\255\
    \247\255\248\255\001\000\251\255\252\255\028\000\103\000\113\000\
    \004\000\246\255\250\255\239\255\240\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\013\000\255\255\255\255\255\255\
    \255\255\255\255\017\000\255\255\255\255\002\000\001\000\006\000\
    \000\000\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\255\255\000\000\255\255\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\016\000\016\000\000\000\016\000\016\000\016\000\000\000\
    \016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\
    \006\000\005\000\011\000\012\000\007\000\015\000\018\000\000\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\002\000\020\000\009\000\008\000\000\000\000\000\
    \000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\000\000\000\000\
    \000\000\000\000\000\000\004\000\000\000\003\000\019\000\000\000\
    \000\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\010\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\014\000\000\000\000\000\000\000\000\000\017\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\000\000\016\000\016\000\255\255\
    \016\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\016\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\010\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\002\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\013\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\004\000\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\013\000\000\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\255\255\255\255\255\255\255\255\015\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec main lexbuf =
   __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 20 "bin/eval_ml_4/lexer.mll"
                            ( main lexbuf )
# 151 "bin/eval_ml_4/lexer.ml"

  | 1 ->
# 22 "bin/eval_ml_4/lexer.mll"
    ( Parser.INTV (int_of_string (Lexing.lexeme lexbuf)) )
# 156 "bin/eval_ml_4/lexer.ml"

  | 2 ->
# 24 "bin/eval_ml_4/lexer.mll"
    ( let id = Lexing.lexeme lexbuf in
      try
        List.assoc id reservedWords
      with
      _ -> Parser.ID id
     )
# 166 "bin/eval_ml_4/lexer.ml"

  | 3 ->
# 30 "bin/eval_ml_4/lexer.mll"
      ( Parser.PLUS )
# 171 "bin/eval_ml_4/lexer.ml"

  | 4 ->
# 31 "bin/eval_ml_4/lexer.mll"
      ( Parser.MULT )
# 176 "bin/eval_ml_4/lexer.ml"

  | 5 ->
# 32 "bin/eval_ml_4/lexer.mll"
       ( Parser.TURNSTILE )
# 181 "bin/eval_ml_4/lexer.ml"

  | 6 ->
# 33 "bin/eval_ml_4/lexer.mll"
      ( Parser.MINUS )
# 186 "bin/eval_ml_4/lexer.ml"

  | 7 ->
# 34 "bin/eval_ml_4/lexer.mll"
      ( Parser.LT )
# 191 "bin/eval_ml_4/lexer.ml"

  | 8 ->
# 35 "bin/eval_ml_4/lexer.mll"
      ( Parser.EQ )
# 196 "bin/eval_ml_4/lexer.ml"

  | 9 ->
# 36 "bin/eval_ml_4/lexer.mll"
       ( Parser.ARROW )
# 201 "bin/eval_ml_4/lexer.ml"

  | 10 ->
# 37 "bin/eval_ml_4/lexer.mll"
      ( Parser.COMMA )
# 206 "bin/eval_ml_4/lexer.ml"

  | 11 ->
# 38 "bin/eval_ml_4/lexer.mll"
      ( Parser.LPAREN )
# 211 "bin/eval_ml_4/lexer.ml"

  | 12 ->
# 39 "bin/eval_ml_4/lexer.mll"
      ( Parser.RPAREN )
# 216 "bin/eval_ml_4/lexer.ml"

  | 13 ->
# 40 "bin/eval_ml_4/lexer.mll"
      ( Parser.LBRACKET )
# 221 "bin/eval_ml_4/lexer.ml"

  | 14 ->
# 41 "bin/eval_ml_4/lexer.mll"
      ( Parser.RBRACKET )
# 226 "bin/eval_ml_4/lexer.ml"

  | 15 ->
# 42 "bin/eval_ml_4/lexer.mll"
       ( Parser.CONS )
# 231 "bin/eval_ml_4/lexer.ml"

  | 16 ->
# 43 "bin/eval_ml_4/lexer.mll"
       ( Parser.NIL )
# 236 "bin/eval_ml_4/lexer.ml"

  | 17 ->
# 44 "bin/eval_ml_4/lexer.mll"
      ( Parser.BAR )
# 241 "bin/eval_ml_4/lexer.ml"

  | 18 ->
# 45 "bin/eval_ml_4/lexer.mll"
      ( exit 0 )
# 246 "bin/eval_ml_4/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

;;

